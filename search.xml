<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Ecological Applications - 2022 - Zhang -- 野火烧毁面积预测模型</title>
      <link href="/2023/10/09/ReadAccording/"/>
      <url>/2023/10/09/ReadAccording/</url>
      
        <content type="html"><![CDATA[<!-- <style>#web_bg{  background: url(/img/newbg.png)!important;  /*重新定义background会导致原有定位属性失效，所以也需要再声明一次加权的定位属性*/  background-position: center !important;  background-size: cover !important;  background-repeat: no-repeat !important;}</style> --><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>本篇 $Essay$ 主要阐述了野火对自然环境、全球生态平衡、森林资源以及人类生命财产造成的严重损失。</p><p>提出了野火预测的重要性,并指出当前仍存在挑战,即尽管深度学习算法有了不错的进展,但其对于野火的动态、有效和准确的预测仍然具有很大的不确定性（且对变量的可解释性几乎可以忽略不计）。</p><p>本文介绍了一种基于深度神经网络 $(DNNs)$ 方法的动态全球野火烧毁面积预测模型,该模型利用历史时间序列预测因子和卫星基础的烧毁面积产品生成有效的野火预测。</p><p>本文设计了四种不同结构的<em>CNN2D-LSTM</em>模型候选项,提出了混合DNN模型 $(hybrid DNN)$ ,该模型结合了长短时记忆和二维卷积神经网络 $(CNN2D-LSTM)$ ,并与卷积神经网络 $(CNNs:convolutional neural networks)$ 和全连接长短时记忆 $(FcLSTM：fully connected long short-term memory)$ 方法进行了比较。</p><p>研究结果表明,提出的模型优于其他方法,并能够有效预测全球野火烧毁面积,提前 $1$ 个月进行预测,并可推广为全球火灾风险的季度估算(浏览过使用的数据集后对该模型鲁棒性质疑❓❓❓)。</p><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>野火是地球系统中重要的干扰因素,对环境的许多方面产生深远影响,如全球生态平衡、植被分布、大气组成和基础设施,以及人类生命和财产。生态系统中的野火取决于气候、植被类型和人类活动,在全球或区域尺度上具有很大的空间和时间变异性。根据最近的估算,全球平均每年烧毁的土地面积范围在 $3.3$到$3.8 million kilometers$ 之间。此外,随着气候变暖,我们正见证野火带来的影响不断增加。所以,在野火管理方面,<em>理解和更好地预测野火</em>至关重要。</p><p>人类长期以来致力于改进对多样地球系统背景下野火的预测。现有研究在野火预测的不同领域已经展开,包括火灾发生预测、火灾严重程度和烧毁面积预测。烧毁面积是描述火灾对生态系统和植被分布影响以及估计火灾排放的关键变量。研究人员一直致力于提供不同前瞻时段的烧毁面积预测,包括短期(日常、每周、每月)和长期(季节性、年度和长达数年的时间范围)。</p><p>然而,每月烧毁面积预测仍相对较少见,而且大多限于特定地区。此外,大多数利用统计模型基于气候信息预测火灾活动的研究依赖于少数预测因子并具有区域重点。长期全球火灾数据的缺乏阻碍了全球范围的研究。最近的情况发生了变化,因为全球月度烧毁面积数据集现在已经跨足过去二十年, <em>使得预测全球范围内野火的烧毁面积成为可能</em> (个人认为限制不能预测全球范围野火的原因不止于此,更多是因为自然的不可控因素太强)。</p><p>然而,开发<em>用于全球每月烧毁面积预测的动态综合时空预测系统似乎仍然是一个重大挑战</em>。这个挑战对于动态野火预测尤为明显,动态变量如气象条件在其中占主导地位。烧毁面积的预测必须基于对动态预测因子和响应变量之间非线性关系的探索,并将通过对越来越大的地理数据集和计算密集型模拟的分析来实现。<em>通过整合改进的理论、高性能计算和精密观测技术,数值天气预测和气候模型的改进已经潜在地提高了烧毁面积的可预测性</em>。</p><p>此外,计算机模拟变得越来越真实,并且对于预测野火具有更强的相关性。为充分利用地球系统数据的爆炸式增长和多样性,必须完成两项重要任务,即从大量数据中提取知识和构建模型。利用前所未有的数据来源和计算能力不断增强,有望从这些数据中提取可解释的信息和新见解。机器学习领域的技术正在快速发展,将在这方面发挥关键作用,特别是针对关注时空背景和不确定性的最近研究。</p><hr><ul><li>Karpatne, A., I. Ebert-Uphoff, S. Ravela, H. A. Babaie, and V.Kumar. 2019. “Machine Learning for the Geosciences: Challenges and Opportunities.” IEEE Transactions on Knowledge and Data Engineering 31: 1544–54.</li><li>Bergen, K. J., P. A. Johnson, M. V. De Hoop, and G. C. Beroza. 2019. “Machine Learning for Data-Driven Discovery in Solid Earth Geoscience.” Science 363: eaau0323</li></ul><hr><p>对于野火预测,已经使用并比较了许多确定性和随机模型。基于数据驱动的建模方法,如机器学习算法,受到了广泛关注,并且已经表现出优于确定性方法的性能。与其他野火领域相比,机器学习方法在烧毁面积预测研究中的运用相对较新,然而这些研究已经纳入了多种机器学习方法。例如,<em>RF、SVM、Logistic Regression 和混合人工智能</em>,模型都得到了应用。也已经进行了多个机器学习算法的比较研究。特别是,人工神经网络(ANNs)受到了广泛关注,浅层神经网络的多层感知器(MLPs)已应用于森林火灾的预测。由于野火时空变异的复杂性、非线性和动态特性,传统的浅层前馈神经网络难以满足预测的需求。因此,应进一步发展设计考虑时空背景的预测模型,<em>以求有办法解决野火动态的非线性特性</em>(难点🔥🔥🔥)。</p><hr><ul><li>Gholamnia, K., T. G. Nachappa, O. Ghorbanzadeh, and T. Blaschke. 2020. “Comparisons of Diverse Machine Learning Approaches for Wildfire Susceptibility Mapping.” Symmetry 12: 1–20.</li><li>Landschützer, P., N. Gruber, D. C. E. Bakker, U. Schuster, S.Nakaoka, M. R. Payne, T. P. Sasse, and J. Zeng. 2013. “A Neural Network-Based Estimate of the Seasonal to Inter-Annual Variability of the Atlantic Ocean Carbon Sink.” Biogeosciences 10: 7793–815.</li><li>Leuenberger, M., J. Parente, M. Tonini, M. G. Pereira, and M.Kanevski. 2018. “Wildfire Susceptibility Mapping: Deterministic Vs. Stochastic Approaches.” Environmental Modelling and Software 101: 194–203.</li></ul><hr><p><em>深度神经网络(DNNs)</em> 或 <em>深度学习</em>是一种特定类型的机器学习方法,是经典人工神经网络(ANN)的扩展,它包括多个隐藏层。近年来,DNNs取得了显著的成功,并在许多领域(如分类、异常检测和回归)中显示出有前景的结果。虽然深度学习在地球科学领域的应用仍处于初级阶段,但近期的有希望的示例表明,DNNs是一种有效的方法,迄今已应用于诸如滑坡检测(Github上有个人问过我相关的问题,但实际上这个属于目标检测方向的❓)、飓风检测和热带气旋检测等主题。卷积神经网络(CNNs)和长短时记忆(LSTM)神经网络已成为重要的先进DNN算法。CNNs能够在处理具有空间背景的数据时发现多个层次的表示,并已成功应用于灾害检测和预测应用,如火灾检测、厄尔尼诺/南方涛动(ENSO)预测和森林火灾易感性制图。循环神经网络(RNNs)将时间序列的概念引入网络结构的设计中,使其在序列学习方面更具适应性。LSTM神经网络是RNN的一种变体,在需要长期时间信息的时间序列中得到广泛应用。RNNs也已用于每月野火发生率的预测和野火规模预测。近年来,组合卷积-循环方法的兴趣日益增加,形成了一个统一的架构,可以整合CNNs和RNNs的优点。卷积-循环组合灵活多样,已被一些研究人员用于特定问题的应用,如降水预报、臭氧和PM2.5浓度预测。然而,用于这些应用的模型适用于单变量预测或一维卷积操作,对于多变量时间序列数据和野火预测的时变多维结构存在限制。因此,非常<em>有必要开发适用于全球野火动态预测的DNN模型</em>(👍👍👍)。</p><hr><ul><li>Hinton, G. E., and R. R. Salakhutdinov. 2006. “Reducing the Dimensionality of Data with Neural Networks.” Science 313:504–7.</li><li>LeCun, Y., Y. Bengio, and G. Hinton. 2015. “Deep Learning.” Nature 521: 436–44.</li><li>Vetrivel, A., M. Gerke, N. Kerle, F. Nex, and G. Vosselman. 2018.“Disaster Damage Detection through Synergistic Use of Deep Learning and 3D Point Cloud Features Derived from Very High Resolution Oblique Aerial Images, and Multiple-Kernel-Learning.” ISPRS Journal of PhQtogrammetry and RemQte Sensing 140:45–59.</li><li>Hochreiter, S., and J. Schmidhuber. 1997. “Long Short-Term Memory.” Neural Computation 9: 1735–80.</li><li>Muhammad A, Liang X, Zhang Y, et al. A Deep Learning Framework for Wildfire Detection and Early Warning[J]. IEEE Access, 2018, 6: 12451-12459.</li><li>Ham Y G, Lee J, Kim S, et al. Deep learning for multi-task oceanic extreme event detection[J]. Scientific reports, 2019, 9(1): 1-10.</li><li>Zhang Y, Liang X, Li W, et al. A deep learning framework for wildfire susceptibility mapping in the boreal forest region using geospatial big data[J]. ISPRS Journal of PhQtogrammetry and RemQte Sensing, 2019, 149: 1-14.</li><li>Dutta D, Mallick J, Bhattacharya A, et al. Predicting monthly forest fire occurrence from meteorological data using recurrent neural networks[J]. IEEE Geoscience and RemQte Sensing Letters, 2013, 10(3): 493-497.</li><li>Liang X, Li W, Zhang Y, et al. A deep learning framework for wildfire size prediction using satellite images[J]. RemQte Sensing of Environment, 2019, 231: 111223.</li><li>Mou L, Gao Y, Zhang Z, et al. Convolutional neural networks-based deep learning for detecting and forecasting regional droughts[J]. RemQte Sensing of Environment, 2019, 232: 111317.</li><li>Shi X, Chen Z, Wang H, et al. Convolutional LSTM network: A machine learning approach for precipitation nowcasting[J]. arXiv preprint arXiv:1506.04214, 2015.</li><li>Pak H, Kim H, Kim H, et al. A hybrid deep learning model for PM2. 5 forecasting[J]. IEEE Access, 2018, 6: 24411-24418.</li><li>Huang Y, Kuo Y H. Deep learning for multi-year PM2. 5 concentration forecasting across the continental USA[J]. RemQte Sensing of Environment, 2018, 216: 47-64.</li></ul><hr><p><em>深度神经网络(DNNs)</em> 提供了一种新的有前景的方法来捕捉非线性时空相关性。因此,应该调查深度学习方法是否能够有效地模拟野火的时空依赖关系。<em>预先训练的二维卷积神经网络(2D CNNs)能够有效地发现火灾事件之间隐藏且深度交织的空间关系,而长短时记忆网络(LSTM)则可以执行时间序列分析以捕捉时间相关性</em>。因此,本文的目标如下：</p><ul><li>开发一种名为CNN2D-LSTM的动态预测模型,充分利用CNN和LSTM的互补性,实现全球每月烧毁面积的综合时空预测,空间分辨率为 $0.25°$ ❓❓❓。</li><li>通过使用全球预测数据集和基于卫星的烧毁面积产品的实验,研究所提出的野火预测模型 $(1个月的前瞻时段)$ 的适用性、效果和优势👍。</li></ul><hr><ul><li>Reichstein, M., B. Hiederer, A. Cescatti, A. D. Papale, and D. Papale. 2019. “Deep Learning and Process Understanding for Data-Driven Earth System Science.” Nature 566: 195–204.</li></ul><hr><p>本文作者们展示了一种利用深度学习方法的每月烧毁面积时空预测模型能够产生有效的野火预测。提出了<em>CNN2D-LSTM</em>混合模型,该模型<em>结合了CNN优秀的空间特征提取能力和LSTM对输入时间序列数据的长期历史过程的充分反映,以解决空间和长期时间依赖性。</em>建立一个能够动态预测每月野火烧毁面积的预测模型(<em>前瞻时段为1个月</em>)对于全球火灾的预防和管理具有重要意义。</p><h2 id="研究区域和数据"><a href="#研究区域和数据" class="headerlink" title="研究区域和数据"></a>研究区域和数据</h2><h3 id="研究区域"><a href="#研究区域" class="headerlink" title="研究区域"></a>研究区域</h3><p>由于本文关注<em>全球植被火灾</em>,作者们从 $2012$年 <em>Moderate Resolution Imaging Spectroradiometer(MODIS)MCD12Q1 Col 5.1</em>数据集中提取了<em>来自马里兰大学(UMD)分类方案的10种植被土地类型</em>,空间分辨率为 $500$米。森林类别包括:<em>常绿针叶林、常绿阔叶林、落叶针叶林、落叶阔叶林和混合林；灌木地包括密闭灌木地和开放灌木地；草地包括有灌木的热带草原、草原和草地</em>。由于本文不考虑农业火灾,因此排除了农业用地和非植被区域。</p><hr><p><img src="/2023/10/09/ReadAccording/eap2610-sup-0001-appendix_s1.jpg" alt="S1"></p><hr><h3 id="Y-数据集"><a href="#Y-数据集" class="headerlink" title="$Y$数据集"></a>$Y$数据集</h3><p>在本研究中,使用了来自<em>全球火灾排放数据库第 $4$ 版 $(GFED4s)$ $1997$ 年至 $2016年$ 的每月烧毁面积数据</em>作为响应变量(<em>$Y$</em>)。原始空间分辨率为<strong>0.25° * 0.25°</strong>。对 $1997$年 至 $2016$年的所有月度烧毁面积数据集进行了处理,获得了 $240$ <em>个月度烧毁面积栅格数据集(BRDs)</em>。</p><h3 id="X-变量数据"><a href="#X-变量数据" class="headerlink" title="$X$变量数据"></a>$X$变量数据</h3><p>为满足动态模型的需求,作者们关注影响野火的时间动态预测因子。选择了<em>九个与气象相关的预测因子和两个生物物理学预测因子</em> ,所有数据集的原始数据格式均为 <em>netCDF</em> ,如下表所述和列出的。前六个月的气象数据集来自NASA全球陆地数据同化系统 <em>(GLDAS)</em> ,空间分辨率达到 <em>0.25°</em> ,时间分辨率为 $6$小时。月最高温度 <em>(Tasmax)</em> 和最低温度 <em>(Tasmin)</em> 来自<em>气候预测系统再分析(CFSR)产品</em>。<em>标准化降水指数(SPI)</em> 常用于监测干旱和异常湿润时期。SPI是使用月总降水数据 $(1900-2017)$年计算的三个月尺度。其他经典的预测因子包括归一化差异植被指数 <em>(NDVI)</em> 和叶面积指数 <em>(LAI)</em> 。<em>NDVI</em> 值反映了植被健康状况和基本的燃料分布, 从美国地质调查局 <em>(USGS)</em> 网站获得了分辨率为 $500$ 米的 <em>MODIS NDVI月合成产品</em>。而 <em>LAI8天复合产品</em> 通过 <em>取月平均值</em> 合成了 <em>月数据</em>。这两个生物物理学指标从原始分辨率重采样到作者的研究分析单元,即 $0.25° \times 0.25°$ 格网。所有数据集均以栅格数据形式处理。单个月的预测因子地图最终合并为一个命名为可变栅格数据集 <em>(VRD)</em>的栅格。所有 <em>预测因子的每月变量</em> 都以相同方式处理,最终建立了 $240$个月的 <em>VRD Dataset</em>。VRD的空间分辨率为 <script type="math/tex">0.25° \times 0.25°</script>,与烧毁面积数据集一致。</p><hr><div class="table-container"><table><thead><tr><th style="text-align:center">NO.</th><th style="text-align:center">数据集</th><th style="text-align:center">空间分辨率</th><th style="text-align:center">时间分辨率</th><th style="text-align:center">单位</th><th style="text-align:center">来源</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">AveTemp</td><td style="text-align:center">0.25°(lat/lon)</td><td style="text-align:center">月</td><td style="text-align:center">℃</td><td style="text-align:center">GLDAS</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">WindSpeed</td><td style="text-align:center">0.25°(lat/lon)</td><td style="text-align:center">月</td><td style="text-align:center">m/s</td><td style="text-align:center">GLDAS</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">SpeHum</td><td style="text-align:center">0.25°(lat/lon)</td><td style="text-align:center">月</td><td style="text-align:center">kg/kg</td><td style="text-align:center">GLDAS</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">AccuPrec</td><td style="text-align:center">0.25°(lat/lon)</td><td style="text-align:center">月</td><td style="text-align:center">mm</td><td style="text-align:center">GLDAS</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">SoilMoist</td><td style="text-align:center">0.25°(lat/lon)</td><td style="text-align:center">月</td><td style="text-align:center">kg/m^2</td><td style="text-align:center">GLDAS</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">SoilTemp</td><td style="text-align:center">0.25°(lat/lon)</td><td style="text-align:center">月</td><td style="text-align:center">℃</td><td style="text-align:center">GLDAS</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">Tasmax</td><td style="text-align:center">0.25°(lat/lon)</td><td style="text-align:center">月</td><td style="text-align:center">℃</td><td style="text-align:center">CFSR</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">Tasmin</td><td style="text-align:center">0.25°(lat/lon)</td><td style="text-align:center">月</td><td style="text-align:center">℃</td><td style="text-align:center">CFSR</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">SPI</td><td style="text-align:center">0.25°(lat/lon)</td><td style="text-align:center">月</td><td style="text-align:center">无量纲</td><td style="text-align:center">CFSR</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">NDVI</td><td style="text-align:center">0.25°(lat/lon)</td><td style="text-align:center">月</td><td style="text-align:center">Ratio</td><td style="text-align:center">MODIS</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center">LAI</td><td style="text-align:center">0.25°(lat/lon)</td><td style="text-align:center">月(取均值)</td><td style="text-align:center">Ratio</td><td style="text-align:center">MODIS</td></tr></tbody></table></div><hr><ul><li>Saha, S., S. Moorthi, H. L. Pan, X. Wu, J. Wang, S. Nadiga, P. Tripp,et al. 2010b. “The NCEP Climate Forecast System Reanalysis.”Bulletin of the American Meteorological Society 91: 1015–57.</li><li>Saha, S., S. Moorthi, H.-L. Pan, X. Wu, J. Wang, S. Nadiga, P. Tripp,et al. 2010a. “NCEP Climate Forecast System Reanalysis (CFSR) Monthly Products, January 1979 to December 2010.” Boulder, CO: Research Data Archive at the National Center for Atmospheric Research, Computational and Information Systems Laboratory. <a href="https://doi.org/10.5065/D6DN438J">https://doi.org/10.5065/D6DN438J</a>.</li><li>Yuan W, Liu S, Dong W, et al. A worldwide analysis of within-canopy variations in leaf structural, chemical and physiological traits across plant functional types[J]. New Phytologist, 2011, 201(2): 354-369.</li></ul><hr><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><h3 id="CNN2D-LSTM模型"><a href="#CNN2D-LSTM模型" class="headerlink" title="CNN2D-LSTM模型"></a>CNN2D-LSTM模型</h3><p><em>卷积神经网络(CNN)</em> 是一种前馈神经网络,其中神经元之间的连接只在前向方向上,而 <em>长短时记忆网络(LSTM)</em> 是一种循环神经网络,其中神经元之间的连接可以形成有向循环,产生诸如记忆等复杂动态。<em>CNN</em>通常由<em>卷积、池化和全连接层</em>组成,如下图所示。稀疏连接和权重共享是CNN的主要特征。卷积层执行线性卷积操作并输出特征图。修正线性单元(ReLU)是对特征图进行非线性变换的最常用激活函数。卷积操作的目的是提取不同的输入层特征并实现权重共享。每个阶段的输入和输出都是称为特征图的数组集合。池化层旨在通过在特征图上执行子采样操作(最大池化或平均池化)来减小输出维度的大小。最后的全连接层提供高级抽象特征,激活函数生成最终的预测。</p><hr><p><img src="/2023/10/09/ReadAccording/eap2610-sup-0002-appendix_s1.jpg" alt="S2"></p><hr><hr><ul><li>Ghosh, S., and S. Ghorbanzadeh. 2021. “A Novel Deep Learning Framework for Predicting the Global Wildfire Burned Area Using Satellite Data.” RemQte Sensing 13: 1–22.</li></ul><hr><p><em>长短时记忆网络(LSTM)</em> 是循环神经网络(RNN)的一种变体。<em>LSTM</em> 最初于1997年提出。<em>LSTM</em> 内部的记忆单元赋予其足够的能力来学习时序数据的长期依赖关系。此外,<em>与RNN不同</em>,LSTM中记忆单元的控制门设计能够有效地克服<em>RNN</em>中梯度消失和梯度爆炸的问题,以及长期记忆能力的缺失。因此,<em>具有记忆功能的LSTM模型在与时间序列预测相关的应用中具有极大优势</em>。如下图所示,<em>LSTM</em>由多个同构单元组成,这些单元通过更新内部细胞状态来长时间存储信息。单元由四个主要元素组成：<em>输入门$I_t$、遗忘门$F_t$、输出门 $Q_t$和细胞状态 $C_t$</em>。<em>隐藏状态 $H_t$(Hiden State)</em>和<em>细胞状态 $C_t$(Cell State)</em>是<em>LSTM</em>的两个特性值,前者随时间变化,而后者使得长期记忆成为可能。<em>LSTM的关键元素是 $C_t$</em>,它维护了时间t时单元状态的记忆,并由 <em>$F_t$</em> 和 <em>$I_t$</em> 进行调整。<em>Cell State</em>在LSTM单元的块状图中沿着顶部线水平变化。每个门层可以使用激活函数。S形函数 $\sigma$ 将输入压缩到 $[0, 1]$ 范围内,双曲正切函数 $tanh$ 将其输入x压缩到 $[-1, 1]$ 范围内。</p><hr><p>在野火预测中, <em>输入门 $I_t$</em> 控制新观测对预测的影响；同时, <em>输出门 $Q_t$</em> 控制过去趋势的影响。<em>完全连接的长短时记忆网络(FcLSTM)</em>仅由几个<em>LSTM</em>和<em>全连接层</em>组成。</p><hr><p><img src="/2023/10/09/ReadAccording/eap2610-sup-0003-appendix_s1.jpg" alt="S3"></p><hr><h4 id="提出的CNN2D-LSTM模型"><a href="#提出的CNN2D-LSTM模型" class="headerlink" title="提出的CNN2D-LSTM模型"></a>提出的CNN2D-LSTM模型</h4><h5 id="野火预测问题的时空张量特征建模"><a href="#野火预测问题的时空张量特征建模" class="headerlink" title="野火预测问题的时空张量特征建模"></a>野火预测问题的时空张量特征建模</h5><p>作者将<em>每月烧毁面积的预测构建为一个回归问题</em>,其中<em>多个时空张量数据</em>作为<em>输入</em>。正如上文所说,在相同时间t内收集的变量可以堆叠成一个 $M\times N \times L$的立方体 <em>Qt</em> ,即每个可变栅格数据集(VRD)是一个具有维度 $M \times N \times L$的 $3D$张量(其中M和N是VRD的空间维度[rows,columns], <em>L</em> 是<em>变量的数量</em>)。如果VRD定期记录,就可以得到一系列立方体 <script type="math/tex">Q_{t_{1}}, Q_{t_{2}},…, Q_{t_{k}}</script>。因此,对于一个 <script type="math/tex">m\times n</script> (m行 n列)的空间区域,多个时空序列可以用一个tensor <em>$\chi$ $\in$ $R^{m\times n\times L\times k}$</em> 表示。</p><p>时间步长<em>k</em>是用于预测下一个时间步长的输入序列的长度。<em>CNN2D-LSTM通过其局部邻居的输入和过去状态来确定网格中特定单元的未来状态</em>。因此,对于未来1个月的全球烧毁面积问题的预测,可以如下表示为：</p><script type="math/tex; mode=display">Y_{t_p} = f(Q_{t_{p-1}},Q_{t_{p-2}},...,Q_{t_{p-k}})</script><p>其中, <script type="math/tex">Y_{t_p}</script> 是 <script type="math/tex">({t_p})^{th}</script>时刻的烧毁面积, <script type="math/tex">Q_{t_{p-1}},Q_{t_{p-2}},...,Q_{t_{p-k}}</script> 是过去 $k$ 个月的时空张量数据。$f$ 是一个函数,它将过去 $k$ 个月的时空张量数据映射到未来1个月的烧毁面积,本质上<em>是一个回归问题,是提出的深度学习模型得到的非线性映射。</em></p><h5 id="样本数据集的构建"><a href="#样本数据集的构建" class="headerlink" title="样本数据集的构建"></a>样本数据集的构建</h5><p>数据被分成三个数据集：<em>训练集、验证集和测试集</em>。从1997年1月到2014年12月生成的样本序列 <em>(total:355320个)</em> 被分为<em>训练集(80%)</em>和<em>验证集(剩余20%)</em>。训练数据集用于训练网络,验证数据集用于在训练过程中评估每个训练模型,以便于确定何时停止训练。<br>从<em>2015年1月</em>到<em>2016年12月</em>的数据集被用作项目结束时的<em>测试数据集</em> ,以评估最终模型的 <em>泛化能力和实际性能</em> 。作者<em>1997年到2014年的数据集使用滑动窗口进行样本生成</em>。在<em>时间维度上采用系统随机抽样方法</em> ,从训练数据集的总月数中选择长度为 $k$ ( $k$ 个月)的随机切片。在<em>空间维度</em>上,采用<em>比例分层抽样</em>来处理火灾与非火灾的不平衡比例,因为 <em>火灾通常代表异常事件</em> (有道理🙋‍) 。对于每个月, <em>从研究区域内随机选择空间样本点作为候选空间抽样点</em> 。最后,将时空维度中的样本点集成起来。在<em>读取与每个时间样本序列对应的目标月份的候选样本点后,截取VRD作为网络训练输入,以空间样本点为中心</em> , $m \times n$ (分别表示输入的行和列)为尺寸大小。然后,提取目标月份的<em>BRD</em>作为网络训练输出,形成训练样本。</p><h5 id="CNN2D-LSTM框架-🔥🔥🔥🔥🔥🔥🔥"><a href="#CNN2D-LSTM框架-🔥🔥🔥🔥🔥🔥🔥" class="headerlink" title="CNN2D-LSTM框架(!!!🔥🔥🔥🔥🔥🔥🔥!!!)"></a>CNN2D-LSTM框架(!!!🔥🔥🔥🔥🔥🔥🔥!!!)</h5><p>为了捕捉空间和时间的序列依赖关系,作者将最先进的<em>convolutional–recurrent</em>方法结合到统一架构中, <em>利用它们的互补性</em>进行动态火灾预测。<em>CNN2D-LSTM</em>模型的总体结构如图所示,包括<em>空间、时间和预测部分</em>。在<em>空间组件</em>中,如前文所述,作者为<em>每个时间的每个补丁提取深度CNN特征</em>。在<em>时间组件</em>中,作者们使用<em>LSTM</em>分析<em>CNN提取的特征</em> ,并将<em>CNN特征序列作为时间序列反馈到所提出的LSTM</em>中,以<em>保留连续的时间信息</em>。LSTM的<em>输出经过全连接架构和激活函数</em> ,产生最终的预测。例如,使用<em>从2015年1月到2015年12月的输入序列来预测2016年1月的烧毁面积</em> ,逐步完成每个序列的类推。</p><hr><p><img src="/2023/10/09/ReadAccording/Ecological_Applications_2022_Zhang_Figure1.jpg" alt="S4"></p><hr><p><em>网络的输入形状要求</em>是一个<em>5D</em>张量,其形状由样本数、时间步长、宽度、高度和特征组成。样本数代表训练的批量大小(Batch_Size),作者们将其设为128(与Unet++不太一样),基于多次试验以获得最佳预测准确性。全球<em>月度烧毁面积</em>和<em>野火解释变量</em>的<em>滞后期经过滞后相关分析</em>确定。作者采用最大滞后期(12个月)来确定对野火预测具有显著影响的输入参数的滞后月数。最终,选择过去12个月的时空输入序列作为模型的输入,即时间步长 $k=12$。宽度和高度($m \times n$ , $15 \times 15$ )分别是输入补丁的行和列。特征( $L$ , $L = 9$ )是预测因子的数量。所有单<em>独的输入预测因子都通过其标准化</em>的 $z$分数(减去均值,然后除以标准差)而<em>转换为无量纲单位</em> (经典手法!!!)。</p><p><em>CNN2D-LSTM</em>可以通过<em>堆叠多个构建块</em>(如卷积、池化、全连接和LSTM层)以及设置一系列超参数来配置。可以通过<em>堆叠多个CNN和LSTM层来构建更复杂的CNN2D-LSTM结构</em>。一个<em>LSTM层</em>可以包含与时间序列相关联的多个单元,<em>每个单元使用CNN的特征表示作为输入</em>。从 <script type="math/tex">Cell_{t_1}</script> 到 <script type="math/tex">Cell_{t_k}</script> 用于表示LSTM层的 $12$个单元(即 $k=12$表示前 $12$个月)。实际上,这个变量仅表示不同时间序列中单元的状态。所有序列数据将通过单元,然后其权重将不断更新。</p><h5 id="设计和优化所提出的CNN2D-LSTM架构"><a href="#设计和优化所提出的CNN2D-LSTM架构" class="headerlink" title="设计和优化所提出的CNN2D-LSTM架构"></a>设计和优化所提出的CNN2D-LSTM架构</h5><p>在构建适用于每月烧毁面积预测的最优网络架构时, <em>有效平衡CNN2D-LSTM网络架构的宽度和深度</em>非常重要,以提高模型的准确性和效率。为了实现这一目标,提出了四种不同深度的<em>CNN2D-LSTM</em>候选模型,根据不同数量的建设块命名为:</p><p>(a). <em>(Cov1LSTM1)</em><br>(b). <em>(Cov2LSTM1)</em><br>(c). <em>(Cov1LSTM2)</em><br>(d). <em>(Cov2LSTM2)</em></p><p>具体地：</p><p>(a). <em>Cov1LSTM1</em>: 该模型由 $1$ 个卷积层和 $1$ 个LSTM层组成。<br>(b). <em>Cov2LSTM1</em>: 该模型由 $2$ 个卷积层和 $1$ 个LSTM层组成。<br>(c). <em>Cov1LSTM2</em>: 该模型由 $1$ 个卷积层和 $2$ 个LSTM层组成。<br>(d). <em>Cov2LSTM2</em>: 该模型由 $2$ 个卷积层和 $2$ 个LSTM层组成。</p><p>如下图：</p><hr><p><img src="/2023/10/09/ReadAccording/Ecological_Applications_2022_Zhang_Figure2.jpg" alt="S5"></p><hr><hr><p>🤔🤔🤔个人认为并不是 $卷积层越多$ 或者 $LSTM层越多$ ,模型效果就越好,因为卷积层太多 $过拟合$ &amp;&amp; $特征重复利用$ 的现象比比皆是。。。🤔🤔🤔</p><hr><p>这些模型代表了<em>不同的宽度和深度组合</em>,通过<em>实验和调整</em>可以<em>找到最适合问题的网络架构</em>。在模型的实际运行中,<em>所有时间序列输入都会经过模型</em>,并且<em>模型的权重会不断更新</em>以适应输入数据的特征。</p><p>在模型训练过程中,采用均方误差 $(MSE)$ 作为损失函数来计算模型预测与实际观测值之间的偏差。<em>Adam optimization</em>作为一种<em>基于梯度的高效随机优化算法</em>被选择为优化器。在模型训练开始之前,需要确定每个模型的关键超参数。这些超参数包括不同模型的特征图数量 $(f_1, f_2)$ 、LSTM中的隐藏单元数量 $(h_1, h_2)$ 以及全连接层的权重 $(w_1, w_2, w_3)$ 。通过随机搜索获得的一组超参数 $(f, h, w)$ 被应用于<em>四个CNN2D-LSTM模型</em>中。基于得到的 $MSE$ 值进行模型比较,以选择最优模型。</p><p>在比较了四种候选的CNN2D-LSTM模型后,选择了<em>Cov2LSTM2</em>作为最终模型。下面详细描述了<em>Cov2LSTM2</em>的最终架构：</p><ul><li>特征提取 $(feature extraction)$ ：采用两个连续的时间分布卷积层 $(Conv2D)$ 进行特征提取,内核大小均为 $3\times3$。第一个卷积层有 $64$ 个内核,第二个卷积层有 $128$ 个内核。每个<em>Conv2D</em>层后使用时间分布函数。每个卷积层使用<em>ReLU</em>激活函数。</li><li>池化层 $(pooling layer)$：第二个卷积层后接 $2\times2$ 的最大池化层,步长为 $2$ 个像素。</li><li>批次归一化 $(batch normalization)$：在 $Cov2LSTM2$ 的第一层和第二层卷积层后添加批归一化,以提高效率。</li><li>全连接层 $(fully connected layers)$：在最后一个卷积层后有两个全连接层,每个层有 $512$个神经元。添加了 $dropout$,丢弃率设置为 $0.5$。</li><li>LSTM层 $(LSTM layers)$：使用两个LSTM层,隐藏单元数分别为 $256$和 $128$。每个<em>LSTM层中也应用了dropout</em>。</li><li>预测组件 $(prediction component)$：包括两个全连接层,权重为128和32,并在它们之间使用dropout。最后使用线性激活函数处理输出。实验中使用64作为批量大小 $(batch size)$。学习率设置为 $0.001$。</li><li>早停机制 $(early stops)$：在所有实验中使用了早停机制,以明显减少过拟合</li></ul><h4 id="模型评估指标"><a href="#模型评估指标" class="headerlink" title="模型评估指标"></a>模型评估指标</h4><p>评估标准在评估模型性能和指导回归建模方面起着关键作用。对于一般的统计模型性能评估，采用一致性指数是一种适用且可靠的方法。广泛使用的改进的模型性能指标用于衡量预测模型模拟观测数据的准确程度。改进的一致性指数(IOA)可以表达为：</p><!-- 分为两种情况,p表示模型的预测值,y表示观测值,c = 2(推荐值)。IOA的值范围从0到1，其中1表示模型的预测与观测数据完全一致。 --><script type="math/tex; mode=display">\mathrm{IOA}=\left\{\begin{array}{l}1-\frac{\sum_{i=1}^n\left|p_i-y_i\right|}{c \sum_{i=1}^n\left|y_i-\bar{y}\right|}, \text { when } \sum_{i=1}^n\left|p_i-y_i\right| \leq c \sum_{i=1}^n\left|y_i-\bar{y}\right| \\\frac{c \sum_{i=1}^n\left|y_i-\bar{y}\right|}{\sum_{i=1}^n\left|p_i-y_i\right|}-1, \text { when } \sum_{i=1}^n\left|p_i-y_i\right|>c \sum_{i=1}^n\left|y_i-\bar{y}\right|\end{array}\right.</script><p>公式中, $p$表示模型的预测值, $y$表示观测值, $c = 2$(推荐值)。 $IOA$的值范围从 $0$到 $1$,其中 $1$表示模型的预测与观测数据完全一致。</p><hr><ul><li>Willmott, C. J., S. M. Robeson, K. Matsuura, and D. L. Ficklin.2015. “Assessment of Three Dimensionless Measures of Model Performance.” Environmental Modelling and Software 73:167–74.</li></ul><hr><p>在评估回归估计器的性能时，使用了四个性能指标，即平均绝对误差 $(MAE)$、均方误差 $(MSE)$、均方根误差 $(RMSE)$和决定系数 $(R^2)$。计算公式如下：</p><script type="math/tex; mode=display">\begin{array}{l}\mathrm{MAE}=\frac{1}{n} \sum_{i=1}^{n}\left|y_{i}-p_{i}\right| \\\mathrm{MSE}=\frac{1}{n} \sum_{i=1}^{n}\left(y_{i}-p_{i}\right)^{2} \\\mathrm{RMSE}=\sqrt{\frac{1}{n} \sum_{i=1}^{n}\left(y_{i}-p_{i}\right)^{2}} \\\end{array}</script><p>决定系数通常用 $(R^2)$表示，它表示模型中自变量解释的因变量方差的比例，表示模型的拟合优度。计算 $(R^2)$的公式如下：</p><script type="math/tex; mode=display">R^{2}=1-\frac{\sum_{i=1}^{n}\left(p_{i}-y_{i}\right)^{2}}{\sum_{i=1}^{n}\left(y_{i}-\bar{y}\right)^{2}}</script><p>其中,各个符号的含义如下：<br>$n$ 表示样本数量；<br>$y_i$ 表示观测值；<br>$p_i$ 表示模型的预测值；<br>$\bar{y}$ 表示观测值的平均值。</p><p>这个模型完美的话, $R^2$ 应该等于 $1$ , $MAE$、$MSE$、$RMSE$ 应该等于 $0$。</p><h4 id="月烧毁面积预测-Predict-的技术流程"><a href="#月烧毁面积预测-Predict-的技术流程" class="headerlink" title="月烧毁面积预测 $(Predict)$的技术流程"></a>月烧毁面积预测 $(Predict)$的技术流程</h4><p>作者<em>将每月烧毁面积的预测构建为一个回归问题</em> (基本思想),以多个时空张量数据作为输入。利用预测变量和响应变量分别构建了<em>月度VRDs</em>和<em>BRDs</em>的时空数据库，然后<em>通过空间和时间抽样方法构建了时空样本库</em>。经过模型训练过程后,构建了<em>CNN2D-LSTM</em>模型。在测试数据集中，将固定序列长度 $(12)$个月的预测变量依次输入经过训练的<em>CNN2D-LSTM</em>模型,获得提前 $1$个月的预测结果输出。</p><p>提出的预测模型是在 $GPU$加速环境下构建的，并使用 $TensorFlow$作为后端，通过 $Keras$实现。实验室环境中使用的系统配置如下：$Intel Xeon W-2113 CPU$, $32 GB RAM$,和一块 $NVIDIA GeForce RTX 2080 Ti显卡$。<em>CNN2D-LSTM</em>模型的整体预测过程如图所示:</p><hr><p><img src="/2023/10/09/ReadAccording/Ecological_Applications_2022_Zhang_Figure3.jpg" alt="S6"></p><hr><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><h3 id="解释变量的相关性"><a href="#解释变量的相关性" class="headerlink" title="解释变量的相关性"></a>解释变量的相关性</h3>]]></content>
      
      
      <categories>
          
          <category> DL </category>
          
          <category> WildFire Prediction </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DL </tag>
            
            <tag> Eassy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置Python环境下的OpenCV</title>
      <link href="/2023/10/07/opencv-1-1/"/>
      <url>/2023/10/07/opencv-1-1/</url>
      
        <content type="html"><![CDATA[<!-- <style>#web_bg{  background: url(/img/newbg.png)!important;  /*重新定义background会导致原有定位属性失效，所以也需要再声明一次加权的定位属性*/  background-position: center !important;  background-size: cover !important;  background-repeat: no-repeat !important;}</style> --><h1 id="1-部署Python环境-Anaconda"><a href="#1-部署Python环境-Anaconda" class="headerlink" title="1.部署Python环境(Anaconda)"></a>1.部署Python环境(Anaconda)</h1><p><em>！！！个人建议配置anaconda环境！！！</em></p><p>首先，激活当前的环境（安装地址：<a href="https://www.anaconda.com/">Anaconda | The World’s Most Popular Data Science Platform</a>）。安装后，windows用户在桌面按下<strong>WIN</strong>+<strong>R</strong>，进入控制台程序。</p><p>随后，输入下列代码：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">conda activate base<br></code></pre></td></tr></table></figure><h1 id="2-安装Python环境依赖包"><a href="#2-安装Python环境依赖包" class="headerlink" title="2.安装Python环境依赖包"></a>2.安装Python环境依赖包</h1><p>在控制台中输入：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">pip install opencv<span class="hljs-literal">-python</span> <span class="hljs-literal">-i</span> https://pypi.tuna.tsinghua.edu.cn/simple <br></code></pre></td></tr></table></figure><p>随后，显示安装完毕便可以检测是否安装成功。</p><h1 id="3-使用OpenCV打开图片"><a href="#3-使用OpenCV打开图片" class="headerlink" title="3.使用OpenCV打开图片"></a>3.使用OpenCV打开图片</h1><p>打开<strong>IDE</strong>，或者在桌面新建<em>txt</em>文件，如下图：</p><p><img src="/2023/10/07/opencv-1-1/opencv_1_0.png" alt="opencv_1_0"></p><p>随后，使用记事本打开，输入下列代码，保存，并<strong>将后缀修改为.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br>img_loc=<span class="hljs-string">r&quot;图片地址&quot;</span><br>img=cv2.imread(img_loc)<br>cv2.imshow(<span class="hljs-string">&quot;test&quot;</span>,img)<br>cv2.waitKey()<br></code></pre></td></tr></table></figure><p>在<strong>cmd</strong>中运行代码:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">python test.py<br></code></pre></td></tr></table></figure><p>随后就会发现打开了如下图片自己的图片：</p><p><img src="/2023/10/07/opencv-1-1/opencv_1_1.png" alt="opencv_1_1"></p><p>至此，<strong>Python</strong>环境下的<strong>OpenCV</strong>环境便配置完毕，详细帮助文档如下：</p><p><a href="https://docs.opencv.org/4.x/d6/d00/tutorial_py_root.html">OpenCV-Python 帮助文档</a></p><p><strong>祝大家学习顺利！！！</strong><br><div class="poem"><div class="poem-title">行路难</div><div class="poem-author"></div><p>李白<br>金樽清酒斗十千，玉盘珍羞直万钱。<br>停杯投箸不能食，拔剑四顾心茫然。<br>欲渡黄河冰塞川，将登太行雪满山。<br>闲来垂钓碧溪上，忽复乘舟梦日边。<br>行路难，行路难，多歧路，今安在？<br>长风破浪会有时，直挂云帆济沧海。</p></div></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> CV </tag>
            
            <tag> DL </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
